from youtube_transcript_api import YouTubeTranscriptApi
from youtube_transcript_api.formatters import JSONFormatter

# def youtube(youtube_id):

    # youtube_id= 'F8f_Tobdu6o'


    # retrieve the available transcripts
transcript_list = YouTubeTranscriptApi.list_transcripts('F8f_Tobdu6o') # input 형식으로 받기      UFTkjxSeDIc     F8f_Tobdu6o
# print(transcript_list)
formatter = JSONFormatter()
# iterate over all available transcripts
for transcript in transcript_list:

    # # the Transcript object provides metadata properties
    # print(
    #     # transcript.video_id,
    #     transcript.language,
    #     transcript.language_code,
    #     # whether it has been manually created or generated by YouTube
    #     transcript.is_generated,
    #     # whether this transcript can be translated or not
    #     transcript.is_translatable,
    #     # a list of languages the transcript can be translated to
    #     transcript.translation_languages,
    # )
    a = transcript.fetch()
    print(transcript.fetch())
    # print(a)
    print(a[1]['start'])
    print(a[1]['text'])
    b = ''
    c = ''
    # fetch the actual transcript data
    # print(transcript.is_generated)
    # print()
# print(transcript_list)
    if transcript.language_code == 'ko' and transcript.is_generated == False:
        for i in range(len(a)):
            b += a[i]['text']
            b += ' '
        file = open("text_manual.txt", "w") 
        file.write(b)
        file.close()
    
    if transcript.language_code == 'ko' and transcript.is_generated == True:
        for i in range(len(a)):
            c += a[i]['text']
            c += ' '
        file = open("text_auto.txt", "w") 
        file.write(c)
        file.close()
    

        # translating the transcript will return another transcript object
        # print(transcript.translate('en').fetch())

    # you can also directly filter for the language you are looking for, using the transcript list
    # transcript = transcript_list.find_transcript(['ko'])  

    # or just filter for manually created transcripts  
    # transcript = transcript_list.find_manually_created_transcript(['ko'])  

    # or automatically generated ones  
    # transcript = transcript_list.find_generated_transcript(['ko'])


    # json_formatted = formatter.format_transcript(transcript)
    # with open('your_filename.json', 'w', encoding='utf-8') as json_file:
    #     json_file.write(json_formatted)
    

